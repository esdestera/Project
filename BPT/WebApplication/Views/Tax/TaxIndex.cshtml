@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model WebApplication.Models.TaxViewModel

<style>
    table, th, td {
        border: 1px;
        padding: 10px;
    }

    table {
        border-spacing: 15px;
    }

    .a {
        height: 27px;
        width: 225px
    }

    .b {
        text-align: center;
    }
</style>


@{
    ViewBag.Title = "Pay a tax";
}

@using (Html.BeginForm("Continue", "Tax"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @{
            ApplicationDbContext db = new ApplicationDbContext();

            var currentUser = db.Users.Where(m => m.UserName == User.Identity.Name).FirstOrDefault();

            var taxes = db.Taxes.Where(m => m.Name != User.Identity.Name);
            var taxesList = taxes.Select(m => m.Name).ToList();
            var taxItems = taxesList.Select(x => new SelectListItem { Text = x, Value = x }).ToList();

            var accounts = db.Accounts.Where(m => m.UserId == currentUser.Id);
            var ibanList = accounts.Select(m => m.Iban).ToList();
            var ddlItems = ibanList.Select(x => new SelectListItem { Text = x, Value = x }).ToList();
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.Name, taxItems, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.SenderIban, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.SenderIban, ddlItems, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SenderIban, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox icheck">
                    @Html.CheckBoxFor(m => m.SaveToMyServices)
                    @Html.LabelFor(m => m.SaveToMyServices)
                </div>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Continue" class="btn btn-default" />
            </div>
        </div>
    </div>
}


