@model WebApplication.Models.BillViewModel
@{
    ViewBag.Title = "Bill confirmation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create", "Bill"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @{
            ApplicationDbContext db = new ApplicationDbContext();

            var currentUser = db.Users.Where(m => m.UserName == User.Identity.Name).FirstOrDefault();

            var bills = db.Bills.Where(m => m.Name != User.Identity.Name);
            var billsList = bills.Select(m => m.Name).ToList();
            var billItems = billsList.Select(x => new SelectListItem { Text = x, Value = x }).ToList();

            var billsListIBAN = bills.Select(m => m.BillIban).ToList();
            var billItemIBAN = billsListIBAN.Select(x => new SelectListItem { Text = x, Value = x }).ToList();

            var accounts = db.Accounts.Where(m => m.UserId == currentUser.Id);
            var ibanList = accounts.Select(m => m.Iban).ToList();
            var ddlItems = ibanList.Select(x => new SelectListItem { Text = x, Value = x }).ToList();
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Name, billItems, new { htmlAttributes = new { @class = "form-control", @read_only = "read_only" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Iban, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Iban, billItemIBAN, new { htmlAttributes = new { @class = "form-control", @read_only = "read_only" } })
                @Html.ValidationMessageFor(model => model.Iban, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.SenderIban, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SenderIban, ddlItems, new { htmlAttributes = new { @class = "form-control", @read_only = "read_only" } })
                @Html.ValidationMessageFor(model => model.SenderIban, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @read_only = "read_only" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control", @read_only = "read_only" } })
                @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
            </div>
        </div>
        @{
            if (Model.SaveToMyServices != null && Model.SaveToMyServices == true)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.TransactionName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TransactionName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TransactionName, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Transfer money" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<form method="get" action="@Url.Action("BillIndex", "Bill")">
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Cancel" class="btn btn-default" />
        </div>
    </div>
</form>
